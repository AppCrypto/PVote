// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerificationG1Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG1Point struct {
	X *big.Int
	Y *big.Int
}

// VerificationG2Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"Aggregate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"y1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"h\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"y2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"DVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetAggregateValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetDVerifyResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetPVerifyResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetTallyValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetZKRPResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"Interpolation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexTallier\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"DecShare\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"challenge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"PVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"}],\"name\":\"RScodeVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numCandidates\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"Tally\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Ej\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Uj\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Cj\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z1\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z2\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z3\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Uj\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"UploadBallotCipher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"c\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"challenge\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"UploadPVSSShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"h0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"pkI\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"sigmak\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numCandidates\",\"type\":\"uint256\"}],\"name\":\"UploadParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"pks\",\"type\":\"tuple[]\"}],\"name\":\"UploadPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Ej\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Uj\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Cj\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z1\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z2\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z3\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Uj\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"d\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ZKRPVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"coefficient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prime\",\"type\":\"uint256\"}],\"name\":\"inv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x6080806040523460155761335a908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630c65d6e214610147578063338255f3146101425780633ae867e11461013d578063446bf71c146101385780634ea9637d1461013357806356af27dd1461012e57806365d285541461012957806375457b93146101245780637e3d3acb1461011f5780639e134b591461011a578063b52c5ff214610115578063b562c4ab14610110578063b7e5723f1461010b578063beaed4a014610106578063c3ceb16b14610101578063db301a7f146100fc578063e283f130146100f7578063e7db3bb2146100f25763f0934fe9146100ed57600080fd5b611b42565b611a36565b61195f565b6117f1565b611763565b6116fd565b61165f565b61141b565b6112ad565b61120f565b6110f6565b610917565b61075d565b610675565b61060f565b610566565b610443565b6103b5565b6102e1565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761017d57604052565b61014c565b60c081019081106001600160401b0382111761017d57604052565b90601f801991011681019081106001600160401b0382111761017d57604052565b60409060231901126101e657604051906101d782610162565b60243582526044356020830152565b600080fd5b60409060631901126101e6576040519061020482610162565b60643582526084356020830152565b60409060a31901126101e6576040519061022c82610162565b60a435825260c4356020830152565b60409060031901126101e6576040519061025482610162565b60043582526024356020830152565b60409060431901126101e6576040519061027c82610162565b60443582526064356020830152565b6040906101031901126101e657604051906102a582610162565b610104358252610124356020830152565b6040906101431901126101e657604051906102d082610162565b610144358252610164356020830152565b346101e6576101203660031901126101e6576004356102ff366101be565b600161035561030d366101eb565b61031636610213565b60e4359061010435928661032989611be6565b50916103348a611c0a565b5061034f610349610343611c83565b95611cbb565b91611cbb565b9361269d565b1515036103ab5761036590611e5c565b60165490600160401b82101561017d576103888260016103a19401601655611ef7565b90919082549060031b91821b91600019901b1916179055565b6103a9611d19565b005b50506103a9611cd9565b346101e65760403660031901126101e6576004356024359060011982019180831161043e5760c091602091600094604051926103f084610182565b84845284808501528460408501526060840152608083015260a082015260405192839161041d848461019d565b83368437856005600019f11561043a575160405190815260209150f35b5080fd5b611fc6565b346101e65760403660031901126101e6576020610464602435600435612047565b604051908152f35b6001600160401b03811161017d5760051b60200190565b81601f820112156101e65780359061049a8261046c565b926104a8604051948561019d565b82845260208085019360061b830101918183116101e657602001925b8284106104d2575050505090565b60006040858403126105065750602060409182516104ef81610162565b8635815282870135838201528152019301926104c4565b80fd5b9080601f830112156101e65781356105208161046c565b9261052e604051948561019d565b81845260208085019260051b8201019283116101e657602001905b8282106105565750505090565b8135815260209182019101610549565b346101e65760803660031901126101e6576004356024356001600160401b0381116101e657610599903690600401610483565b90604435906001600160401b0382116101e6576040926105c06105ca933690600401610509565b90606435926121d5565b6105e08251809260208091805184520151910152565bf35b60206003198201126101e657600435906001600160401b0382116101e65761060c91600401610483565b90565b346101e65761061d366105e2565b60005b81518110156103a95761063381836121c1565b5190601054600160401b81101561017d5780600161065692016010556010611c67565b610670578251815560209092015160019283015501610620565b611e2e565b346101e65760003660031901126101e65760005b610691611f12565b50548110156106fd576001906106ad6106a8611c83565b612e1d565b601154919060005b8381106106ce57506106c8919250611e94565b01610689565b906106f685916106f06106ea866106e487611f45565b50611c67565b50611cbb565b90612ef0565b91016106b5565b60005b610708611f60565b50548110156103a95760019061071f6106a8611c83565b601354919060005b838110610740575061073a919250611eb5565b01610700565b9061075685916106f06106ea866106e487611f93565b9101610727565b346101e6576101803660031901126101e6576004356001600160401b0381116101e65761078e903690600401610483565b6024356001600160401b0381116101e6576107ad903690600401610483565b906044356001600160401b0381116101e6576107cd903690600401610483565b916064356001600160401b0381116101e6576107ed903690600401610483565b6084356001600160401b0381116101e65761080c903690600401610483565b60a4356001600160401b0381116101e65761082b903690600401610509565b60c4356001600160401b0381116101e65761084a903690600401610509565b60e4356001600160401b0381116101e657610869903690600401610509565b91610104356001600160401b0381116101e65761088a903690600401610509565b93610124356001600160401b0381116101e6576108ab903690600401610483565b9561014435996001600160401b038b116101e6576108d06103a99b3690600401610483565b98610164359a612519565b602060408183019282815284518094520192019060005b8181106108ff5750505090565b825115158452602093840193909201916001016108f2565b346101e65760003660031901126101e657604051601854808252906020810160186000527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e926000935b81601f860110610e5b5791610a8a948492610a7e945491818110610e3f575b818110610e20575b818110610e01575b818110610de2575b818110610dc4575b818110610da5575b818110610d86575b818110610d67575b818110610d48575b818110610d29575b818110610d0a575b818110610ceb575b818110610ccc575b818110610cad575b818110610c8e575b818110610c6f575b818110610c50575b818110610c31575b818110610c12575b818110610bf3575b818110610bd4575b818110610bb5575b818110610b96575b818110610b77575b818110610b58575b818110610b39575b818110610b1a575b818110610afb575b818110610adc575b818110610abd575b818110610a9e575b10610a8e575b50038261019d565b604051918291826108db565b0390f35b60f81c1515815260200138610a76565b92602081610ab560019360ff8760f01c1615159052565b019301610a70565b92602081610ad460019360ff8760e81c1615159052565b019301610a68565b92602081610af360019360ff8760e01c1615159052565b019301610a60565b92602081610b1260019360ff8760d81c1615159052565b019301610a58565b92602081610b3160019360ff8760d01c1615159052565b019301610a50565b92602081610b5060019360ff8760c81c1615159052565b019301610a48565b92602081610b6f60019360ff8760c01c1615159052565b019301610a40565b92602081610b8e60019360ff8760b81c1615159052565b019301610a38565b92602081610bad60019360ff8760b01c1615159052565b019301610a30565b92602081610bcc60019360ff8760a81c1615159052565b019301610a28565b92602081610beb60019360ff8760a01c1615159052565b019301610a20565b92602081610c0a60019360ff8760981c1615159052565b019301610a18565b92602081610c2960019360ff8760901c1615159052565b019301610a10565b92602081610c4860019360ff8760881c1615159052565b019301610a08565b92602081610c6760019360ff8760801c1615159052565b019301610a00565b92602081610c8660019360ff8760781c1615159052565b0193016109f8565b92602081610ca560019360ff8760701c1615159052565b0193016109f0565b92602081610cc460019360ff8760681c1615159052565b0193016109e8565b92602081610ce360019360ff8760601c1615159052565b0193016109e0565b92602081610d0260019360ff8760581c1615159052565b0193016109d8565b92602081610d2160019360ff8760501c1615159052565b0193016109d0565b92602081610d4060019360ff8760481c1615159052565b0193016109c8565b92602081610d5f60019360ff8760401c1615159052565b0193016109c0565b92602081610d7e60019360ff8760381c1615159052565b0193016109b8565b92602081610d9d60019360ff8760301c1615159052565b0193016109b0565b92602081610dbc60019360ff8760281c1615159052565b0193016109a8565b92602081610dda60019360ff87851c1615159052565b0193016109a0565b92602081610df960019360ff8760181c1615159052565b019301610998565b92602081610e1860019360ff8760101c1615159052565b019301610990565b92602081610e3760019360ff8760081c1615159052565b019301610988565b92602081610e5360019360ff871615159052565b019301610980565b9160016104006020926110eb8654610e778360ff831615159052565b610e8a86840160ff8360081c1615159052565b610e9e6040840160ff8360101c1615159052565b610eb26060840160ff8360181c1615159052565b80861c60ff1615156080840152610ed360a0840160ff8360281c1615159052565b610ee760c0840160ff8360301c1615159052565b610efb60e0840160ff8360381c1615159052565b610f10610100840160ff8360401c1615159052565b610f25610120840160ff8360481c1615159052565b610f3a610140840160ff8360501c1615159052565b610f4f610160840160ff8360581c1615159052565b610f64610180840160ff8360601c1615159052565b610f796101a0840160ff8360681c1615159052565b610f8e6101c0840160ff8360701c1615159052565b610fa36101e0840160ff8360781c1615159052565b610fb8610200840160ff8360801c1615159052565b610fcd610220840160ff8360881c1615159052565b610fe2610240840160ff8360901c1615159052565b610ff7610260840160ff8360981c1615159052565b61100c610280840160ff8360a01c1615159052565b6110216102a0840160ff8360a81c1615159052565b6110366102c0840160ff8360b01c1615159052565b61104b6102e0840160ff8360b81c1615159052565b611060610300840160ff8360c01c1615159052565b611075610320840160ff8360c81c1615159052565b61108a610340840160ff8360d01c1615159052565b61109f610360840160ff8360d81c1615159052565b6110b4610380840160ff8360e01c1615159052565b6110c96103a0840160ff8360e81c1615159052565b6110de6103c0840160ff8360f01c1615159052565b60f81c15156103e0830152565b019301940193610961565b346101e6576101203660031901126101e6576111113661023b565b6044356001600160401b0381116101e657611130903690600401610483565b906064356001600160401b0381116101e657611150903690600401610483565b906084356001600160401b0381116101e657611170903690600401610483565b60a4356001600160401b0381116101e65761118f903690600401610483565b60c4356001600160401b0381116101e6576111ae903690600401610483565b9060e4356001600160401b0381116101e6576111ce903690600401610509565b9261010435956001600160401b0387116101e657610a8a976111f76111fd983690600401610509565b966125e9565b60405190151581529081906020820190565b6101c03660031901126101e6576112253661023b565b61122e36610263565b9060403660831901126101e6576040519061124882610162565b608435825260a435602083015260403660c31901126101e6576020926112a39260405161127481610162565b60c435815260e435868201526112893661028b565b90611293366102b6565b9261018435946101a4359661269d565b6040519015158152f35b346101e65760003660031901126101e657604051601a548082529060208101601a6000527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e926000935b81601f8601106113f45791610a8a948492610a7e945491818110610e3f57818110610e2057818110610e0157818110610de257818110610dc457818110610da557818110610d8657818110610d6757818110610d4857818110610d2957818110610d0a57818110610ceb57818110610ccc57818110610cad57818110610c8e57818110610c6f57818110610c5057818110610c3157818110610c1257818110610bf357818110610bd457818110610bb557818110610b9657818110610b7757818110610b5857818110610b3957818110610b1a57818110610afb57818110610adc57818110610abd57818110610a9e5710610a8e5750038261019d565b9160016104006020926114108654610e778360ff831615159052565b0193019401936112f7565b346101e6576101c03660031901126101e6576004356001600160401b0381116101e65761144c903690600401610483565b6024356001600160401b0381116101e65761146b903690600401610483565b6044356001600160401b0381116101e65761148a903690600401610483565b916064356001600160401b0381116101e6576114aa903690600401610483565b916084356001600160401b0381116101e6576114ca903690600401610483565b60a4356001600160401b0381116101e6576114e9903690600401610509565b60c4356001600160401b0381116101e657611508903690600401610509565b60e4356001600160401b0381116101e657611527903690600401610509565b610104356001600160401b0381116101e657611547903690600401610509565b90610124356001600160401b0381116101e657611568903690600401610483565b92610144356001600160401b0381116101e657611589903690600401610509565b94610164356001600160401b0381116101e6576115aa903690600401610483565b96610184359a6001600160401b038c116101e657610a8a9c6115d36111fd9d3690600401610509565b9a6101a4359c6127c1565b9080601f830112156101e65760408051926115f9828561019d565b839181019283116101e657905b8282106116135750505090565b8135815260209182019101611606565b906080610103198301126101e65760405161163d81610162565b602061165a8294611650816101046115de565b84526101446115de565b910152565b346101e6576102003660031901126101e65761167a3661023b565b61168336610263565b9060803660831901126101e6576040519161169d83610162565b6116a83660846115de565b83526116b53660c46115de565b60208401526116c336611623565b9261018435936001600160401b0385116101e6576116e86103a9953690600401610483565b906101a435926101c435946101e43596612a81565b346101e65760206112a3611710366105e2565b612b36565b602060408183019282815284518094520192019060005b8181106117395750505090565b9091926020604082611758600194885160208091805184520151910152565b01940192910161172c565b346101e65760003660031901126101e6576014546117808161046c565b9061178e604051928361019d565b808252601460009081527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec602084015b8383106117d35760405180610a8a8782611715565b600260206001926117e385611cbb565b8152019201920191906117be565b346101e65760003660031901126101e657604051601954808252906020810160196000527f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695926000935b81601f8601106119385791610a8a948492610a7e945491818110610e3f57818110610e2057818110610e0157818110610de257818110610dc457818110610da557818110610d8657818110610d6757818110610d4857818110610d2957818110610d0a57818110610ceb57818110610ccc57818110610cad57818110610c8e57818110610c6f57818110610c5057818110610c3157818110610c1257818110610bf357818110610bd457818110610bb557818110610b9657818110610b7757818110610b5857818110610b3957818110610b1a57818110610afb57818110610adc57818110610abd57818110610a9e5710610a8e5750038261019d565b9160016104006020926119548654610e778360ff831615159052565b01930194019361183b565b346101e65760c03660031901126101e6576004356001600160401b0381116101e65761198f903690600401610483565b6024356001600160401b0381116101e6576119ae903690600401610483565b906044356001600160401b0381116101e6576119ce903690600401610483565b6064356001600160401b0381116101e6576119ed903690600401610483565b6084356001600160401b0381116101e657611a0c903690600401610509565b9160a435946001600160401b0386116101e657611a306103a9963690600401610509565b94612bf6565b346101e65760803660031901126101e657600435602435611a5682612142565b91611a6081612ce3565b9260005b828110611aee5750611a7583612ce3565b60005b848110611a8157005b80611a98858589611a93600196612daf565b6121d5565b611aa282856121c1565b52611aad81846121c1565b50611ae8611ad9611abd83611c48565b50611ad4610349611ace86896121c1565b51612f40565b612ef0565b611ae283611c48565b90611e44565b01611a78565b80611b0f611b0a611b00600194611ef7565b90549060031b1c90565b611feb565b611b1982856121c1565b52611b266106ea82611c29565b611b3082886121c1565b52611b3b81876121c1565b5001611a64565b346101e65760003660031901126101e657601554611b5f8161046c565b90611b6d604051928361019d565b808252601560009081527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475602084015b838310611bb25760405180610a8a8782611715565b60026020600192611bc285611cbb565b815201920192019190611b9d565b634e487b7160e01b600052603260045260246000fd5b601054811015611c0557601060005260206000209060011b0190600090565b611bd0565b601454811015611c0557601460005260206000209060011b0190600090565b601254811015611c0557601260005260206000209060011b0190600090565b601554811015611c0557601560005260206000209060011b0190600090565b8054821015611c055760005260206000209060011b0190600090565b60405190611c9082610162565b60005482526001546020830152565b60405190611cac82610162565b60025482526003546020830152565b90604051611cc881610162565b602060018294805484520154910152565b601a54600160401b81101561017d576001810180601a55811015611c0557601a60005260206000208160051c019060ff60f883549260031b161b19169055565b601a54600160401b81101561017d576001810180601a55811015611c0557601a60005260206000208160051c019060f882549160031b169060ff6001831b921b1916179055565b601854600160401b81101561017d576001810180601855811015611c0557601860005260206000208160051c019060ff60f883549260031b161b19169055565b601854600160401b81101561017d576001810180601855811015611c0557601860005260206000208160051c019060f882549160031b169060ff6001831b921b1916179055565b601954600160401b81101561017d576001810180601955811015611c0557601960005260206000208160051c019060f882549160031b169060ff6001831b921b1916179055565b634e487b7160e01b600052600060045260246000fd5b9190610670578051825560200151600190910155565b565b601254600160401b81101561017d57806001611e7d92016012556012611c67565b919091610670578051825560200151600190910155565b601454600160401b81101561017d57806001611e7d92016014556014611c67565b601554600160401b81101561017d57806001611e7d92016015556015611c67565b600c54600160401b81101561017d57806001611e7d9201600c55600c611c67565b601654811015611c0557601660005260206000200190600090565b60115415611c0557601160009081527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6891565b601154811015611c0557601160005260206000200190600090565b60135415611c0557601360009081527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09091565b601354811015611c0557601360005260206000200190600090565b8054821015611c055760005260206000200190600090565b634e487b7160e01b600052601160045260246000fd5b60001981019190821161043e57565b906001820180921161043e57565b906002820180921161043e57565b906003820180921161043e57565b906004820180921161043e57565b906005820180921161043e57565b634e487b7160e01b600052601260045260246000fd5b60019260015b6001840180851161043e578110156121235780830361206f575b60010161204d565b9360c061207c8685612dcf565b60405160009161208b82610182565b602082526020808301526020604083015260608201527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff608082015260008051602061330583398151915260a08201526020906040519384916120ee848461019d565b83368437846005600019f115610506575051600191600080516020613305833981519152916000918391900908949050612067565b50915050565b6040519061213682610162565b60006020838281520152565b9061214c8261046c565b612159604051918261019d565b828152809261216a601f199161046c565b0190602036910137565b805115611c055760200190565b805160011015611c055760400190565b805160021015611c055760600190565b805160031015611c055760800190565b805160041015611c055760a00190565b8051821015611c055760209160051b010190565b90926121df612129565b506121e981612142565b92600080937f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff915b84811061226b575050505050506122296106a8611c83565b916000925b82518410156122645761225c6001916106f061224a87866121c1565b5161225588886121c1565b5190612ea9565b93019261222e565b9250505090565b85906001848160005b8981106122b557509061228691612d48565b926122b05760019260008051602061330583398151915291096122a9828a6121c1565b5201612211565b612031565b9150919293508084036122d1575b600101889392918691612274565b9190976122e86122e184896121c1565b5186612dcf565b906122b057600080516020613305833981519152910990600160008051602061330583398151915261232f61231d868a6121c1565b51612328858b6121c1565b5190612dcf565b60009a099190506122c3565b9060068202918083046006149015171561043e57565b601354600160401b81101561017d5780600161237292016013556013611fae565b61067057815191600160401b831161017d5781548383558084106123e0575b5060206123a5910191600052602060002090565b6000915b8383106123b65750505050565b60026020826123d46001945186906020600191805184550151910155565b019201920191906123a9565b6001600160ff1b038116810361043e576001600160ff1b038416840361043e578260005260206000209060011b8101908460011b015b8181106124235750612391565b60008082556001820155600201612416565b601154600160401b81101561017d5780600161245692016011556011611fae565b61067057815191600160401b831161017d5781548383558084106124c4575b506020612489910191600052602060002090565b6000915b83831061249a5750505050565b60026020826124b86001945186906020600191805184550151910155565b0192019201919061248d565b6001600160ff1b038116810361043e576001600160ff1b038416840361043e578260005260206000209060011b8101908460011b015b8181106125075750612475565b600080825560018201556002016124fa565b969390989a99979491928b969361252f8c612142565b9a60005b8d81106125b55750600f54996125488b612142565b9a60005b8181106125805750509160019d9b999795939161256d9d9b999795936127c1565b1515146125775750565b611e5a90612351565b60019192939495969798999a9b508c6125a28261259c81612daf565b926121c1565b5201908f9a99989796959493929161254c565b90919293949596979850600181019081811161043e576001916125d8828f6121c1565b5201908d9897969594939291612533565b949196939095926125f987612b36565b61260a575050505050505050600090565b60005b875181101561268f576126748787878787878f8f896126668161265f81612658816126518161264a816126438161266d9d6121c1565b519c6121c1565b519b6121c1565b519a6121c1565b51996121c1565b51986121c1565b51976121c1565b519661269d565b156126815760010161260d565b505050505050505050600090565b505050505050505050600190565b866126ca896126c46126dc989a6126be6126d6989d6126d0979a989a612ea9565b98612ea9565b94612ea9565b97612ea9565b92612ef0565b93612ef0565b9183518151149384159461272c575b5050821561271f575b821561270b575b505061270657600190565b600090565b6020919250810151910151141538806126fb565b80518251141592506126f4565b6020908101519101511415925038806126eb565b60405191906000835b6002821061275f57505050611e5a60408361019d565b6001602081928554815201930191019091612749565b6040519061278282610162565b8161278d6004612740565b8152602061165a6006612740565b604051906127a882610162565b816127b36008612740565b8152602061165a600a612740565b989392959990969b9c9197949a9c60005b82518110156129f5576128188f8e6122558461259c89886127fd966127f7858d6121c1565b516121d5565b6106f061280a848b6121c1565b51612813611c9f565b612ea9565b61282282876121c1565b5151815114908115916129d8575b501561284d57505050505050505050505050505050612706611d60565b61288d8c6106f08f8461287e8c6106f0612884848f61280a97612255836128778161287e956121c1565b51926121c1565b936121c1565b51612813611c83565b612897828a6121c1565b5151815114908115916129bb575b50156128c257505050505050505050505050505050612706611d60565b80808f8f8f8f8f91938f918695818780976128de8280966121c1565b51916128e9916121c1565b516128f391612ea9565b986128fd916121c1565b5191612908916121c1565b5161291291612ea9565b61291b90612f40565b93612925916121c1565b5161292e611c83565b9061293891612ea9565b93612942916121c1565b5161294c90612f40565b94612956916121c1565b5161296090612f40565b90612969612775565b93612972612775565b9061297b61279b565b91612984612775565b9461298d612775565b976129979961307c565b156129a4576001016127d2565b505050505050505050505050505050612706611d60565b90506020806129ca848c6121c1565b5101519101511415386128a5565b90506020806129e784896121c1565b510151910151141538612830565b505050505050505050505050505050612a0c611da0565b600190565b60005b60028110612a20575050565b60019060208351930192816006015501612a14565b805160005b60028110612a6c5750506020015160005b60028110612a57575050565b6001906020835193019281600a015501612a4b565b60019060208351930192816008015501612a3a565b805160005560200151600155929695949392612aa590805160025560200151600355565b805160005b60028110612b12575050612ae092612ad6612ae5969593612ad16020612adb950151612a11565b612a35565b600d55565b600e55565b600f55565b60005b8251811015612b0d5780612b07612b01600193866121c1565b51611ed6565b01612ae8565b509050565b60019060208351930192816004015501612aaa565b600019811461043e5760010190565b90612b418251612142565b60015b8351808211612b8a57906000805160206133058339815191526000612b6c612b859484612047565b08612b7f612b7983611fdc565b856121c1565b52612b27565b612b44565b5050919091612b9f612b9a611c9f565b612e63565b916000925b8151841015612bc857612bc06001916106f061224a87866121c1565b930192612ba4565b9250505080516002541490811591612be5575b5061270657600190565b602091500151600354141538612bdb565b959492909391612c04611c9f565b9060105497612c128961046c565b92612c20604051948561019d565b898452601060009081527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6729a90602086015b828210612cc4575050508798995090612c6d979392916125e9565b15612c8357611e5a90612c7e611de7565b612435565b50601954600160401b81101561017d576001810180601955811015611c0557601960005260206000208160051c019060ff60f883549260031b161b19169055565b600260206001928f612cd590611cbb565b8152019d019101909b612c52565b90612ced8261046c565b612cfa604051918261019d565b8281528092612d0b601f199161046c565b019060005b828110612d1c57505050565b602090612d27612129565b82828501015201612d10565b604051906020612d43818461019d565b368337565b60c09160405191612d5883610182565b60208352602080840152602060408401526060830152608082015260008051602061330583398151915260a0820152602090604051928391612d9a848461019d565b8336843760006005600019f1156101e6575190565b60008051602061330583398151915290810381811161043e576000900890565b81811115612df857905b810390811161043e576000600080516020613305833981519152910890565b600080516020613305833981519152810180911161043e5790612dd9565b156101e657565b90612e26612129565b91826080606092602060405191612e3d868461019d565b8536843780518352015160208201526000604082015260076107cf195a01fa156101e657565b90612e6c612129565b91826080606092602060405191612e83868461019d565b8536843780518352015160208201526001604082015260076107cf195a01fa156101e657565b9060809291612eb6612129565b938491606093602060405192612ecc878561019d565b863685378051845201516020830152604082015260076107cf195a01fa156101e657565b6020929160c0606092612f01612129565b9586938160405193612f1460808661019d565b6080368637805185520151828401528051604084015201518482015260066107cf195a01fa156101e657565b612f48612129565b5080511580612ffa575b612fdf577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208251920151067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47811161043e5760405191612fd583610162565b8252602082015290565b50604051612fec81610162565b600081526000602082015290565b50602081015115612f52565b6040519061301560c08361019d565b6005825281601f19613027600561046c565b019060409060005b83811061303c5750505050565b602090835161304a81610162565b8451613056868261019d565b8536823781528451613068868261019d565b85368237838201528282850101520161302f565b97909199989596949396613090600561046c565b9761309e604051998a61019d565b60058952601f196130af600561046c565b0160005b81811061319757505061060c9a9b6130c9613006565b9a6130d38b612174565b526130dd8a612174565b506130e78a612181565b526130f189612181565b506130fb89612191565b5261310588612191565b5061310f886121a1565b52613119876121a1565b50613123876121b1565b5261312d866121b1565b5061313787612174565b5261314186612174565b5061314b86612181565b5261315585612181565b5061315f85612191565b5261316984612191565b50613173846121a1565b5261317d836121a1565b50613187836121b1565b52613191826121b1565b506131af565b808b602080936131a5612129565b92010152016130b3565b80516131bd83518214612e16565b6131c68161233b565b926131d084612142565b9260005b83811061320b575050505060208092613205926131ef612d33565b94859260051b910160086107cf195a01fa612e16565b51151590565b80613218600192846121c1565b51516132238261233b565b90613230600092896121c1565b52602061323d83866121c1565b51015161325561324f611b0a8561233b565b896121c1565b5261326082866121c1565b51515161327761324f6132728561233b565b611ff9565b5261328d61328583876121c1565b515160200190565b516132a261324f61329d8561233b565b612007565b5260206132af83876121c1565b5101519050516132cf6132c96132c48461233b565b612015565b886121c1565b526132e860206132df83876121c1565b51015160200190565b516132fd6132c96132f88461233b565b612023565b52016131d456fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212209ec0edf1c28e2df906c15021f65cf6426752509d8f2f6369dd025eb0cd9fdae364736f6c634300081c0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetAggregateValue is a free data retrieval call binding the contract method 0xc3ceb16b.
//
// Solidity: function GetAggregateValue() view returns((uint256,uint256)[])
func (_Contract *ContractCaller) GetAggregateValue(opts *bind.CallOpts) ([]VerificationG1Point, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetAggregateValue")

	if err != nil {
		return *new([]VerificationG1Point), err
	}

	out0 := *abi.ConvertType(out[0], new([]VerificationG1Point)).(*[]VerificationG1Point)

	return out0, err

}

// GetAggregateValue is a free data retrieval call binding the contract method 0xc3ceb16b.
//
// Solidity: function GetAggregateValue() view returns((uint256,uint256)[])
func (_Contract *ContractSession) GetAggregateValue() ([]VerificationG1Point, error) {
	return _Contract.Contract.GetAggregateValue(&_Contract.CallOpts)
}

// GetAggregateValue is a free data retrieval call binding the contract method 0xc3ceb16b.
//
// Solidity: function GetAggregateValue() view returns((uint256,uint256)[])
func (_Contract *ContractCallerSession) GetAggregateValue() ([]VerificationG1Point, error) {
	return _Contract.Contract.GetAggregateValue(&_Contract.CallOpts)
}

// GetDVerifyResult is a free data retrieval call binding the contract method 0xdb301a7f.
//
// Solidity: function GetDVerifyResult() view returns(bool[])
func (_Contract *ContractCaller) GetDVerifyResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetDVerifyResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetDVerifyResult is a free data retrieval call binding the contract method 0xdb301a7f.
//
// Solidity: function GetDVerifyResult() view returns(bool[])
func (_Contract *ContractSession) GetDVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetDVerifyResult(&_Contract.CallOpts)
}

// GetDVerifyResult is a free data retrieval call binding the contract method 0xdb301a7f.
//
// Solidity: function GetDVerifyResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetDVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetDVerifyResult(&_Contract.CallOpts)
}

// GetPVerifyResult is a free data retrieval call binding the contract method 0xb52c5ff2.
//
// Solidity: function GetPVerifyResult() view returns(bool[])
func (_Contract *ContractCaller) GetPVerifyResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetPVerifyResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetPVerifyResult is a free data retrieval call binding the contract method 0xb52c5ff2.
//
// Solidity: function GetPVerifyResult() view returns(bool[])
func (_Contract *ContractSession) GetPVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetPVerifyResult(&_Contract.CallOpts)
}

// GetPVerifyResult is a free data retrieval call binding the contract method 0xb52c5ff2.
//
// Solidity: function GetPVerifyResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetPVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetPVerifyResult(&_Contract.CallOpts)
}

// GetTallyValue is a free data retrieval call binding the contract method 0xf0934fe9.
//
// Solidity: function GetTallyValue() view returns((uint256,uint256)[])
func (_Contract *ContractCaller) GetTallyValue(opts *bind.CallOpts) ([]VerificationG1Point, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetTallyValue")

	if err != nil {
		return *new([]VerificationG1Point), err
	}

	out0 := *abi.ConvertType(out[0], new([]VerificationG1Point)).(*[]VerificationG1Point)

	return out0, err

}

// GetTallyValue is a free data retrieval call binding the contract method 0xf0934fe9.
//
// Solidity: function GetTallyValue() view returns((uint256,uint256)[])
func (_Contract *ContractSession) GetTallyValue() ([]VerificationG1Point, error) {
	return _Contract.Contract.GetTallyValue(&_Contract.CallOpts)
}

// GetTallyValue is a free data retrieval call binding the contract method 0xf0934fe9.
//
// Solidity: function GetTallyValue() view returns((uint256,uint256)[])
func (_Contract *ContractCallerSession) GetTallyValue() ([]VerificationG1Point, error) {
	return _Contract.Contract.GetTallyValue(&_Contract.CallOpts)
}

// GetZKRPResult is a free data retrieval call binding the contract method 0x75457b93.
//
// Solidity: function GetZKRPResult() view returns(bool[])
func (_Contract *ContractCaller) GetZKRPResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetZKRPResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetZKRPResult is a free data retrieval call binding the contract method 0x75457b93.
//
// Solidity: function GetZKRPResult() view returns(bool[])
func (_Contract *ContractSession) GetZKRPResult() ([]bool, error) {
	return _Contract.Contract.GetZKRPResult(&_Contract.CallOpts)
}

// GetZKRPResult is a free data retrieval call binding the contract method 0x75457b93.
//
// Solidity: function GetZKRPResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetZKRPResult() ([]bool, error) {
	return _Contract.Contract.GetZKRPResult(&_Contract.CallOpts)
}

// Aggregate is a paid mutator transaction binding the contract method 0x56af27dd.
//
// Solidity: function Aggregate() returns()
func (_Contract *ContractTransactor) Aggregate(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Aggregate")
}

// Aggregate is a paid mutator transaction binding the contract method 0x56af27dd.
//
// Solidity: function Aggregate() returns()
func (_Contract *ContractSession) Aggregate() (*types.Transaction, error) {
	return _Contract.Contract.Aggregate(&_Contract.TransactOpts)
}

// Aggregate is a paid mutator transaction binding the contract method 0x56af27dd.
//
// Solidity: function Aggregate() returns()
func (_Contract *ContractTransactorSession) Aggregate() (*types.Transaction, error) {
	return _Contract.Contract.Aggregate(&_Contract.TransactOpts)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DVerify is a paid mutator transaction binding the contract method 0x7e3d3acb.
//
// Solidity: function DVerify((uint256,uint256) g, (uint256,uint256)[] y1, (uint256,uint256)[] a1, (uint256,uint256)[] h, (uint256,uint256)[] y2, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns(bool)
func (_Contract *ContractTransactor) DVerify(opts *bind.TransactOpts, g VerificationG1Point, y1 []VerificationG1Point, a1 []VerificationG1Point, h []VerificationG1Point, y2 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DVerify", g, y1, a1, h, y2, a2, c, z)
}

// DVerify is a paid mutator transaction binding the contract method 0x7e3d3acb.
//
// Solidity: function DVerify((uint256,uint256) g, (uint256,uint256)[] y1, (uint256,uint256)[] a1, (uint256,uint256)[] h, (uint256,uint256)[] y2, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns(bool)
func (_Contract *ContractSession) DVerify(g VerificationG1Point, y1 []VerificationG1Point, a1 []VerificationG1Point, h []VerificationG1Point, y2 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DVerify is a paid mutator transaction binding the contract method 0x7e3d3acb.
//
// Solidity: function DVerify((uint256,uint256) g, (uint256,uint256)[] y1, (uint256,uint256)[] a1, (uint256,uint256)[] h, (uint256,uint256)[] y2, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns(bool)
func (_Contract *ContractTransactorSession) DVerify(g VerificationG1Point, y1 []VerificationG1Point, a1 []VerificationG1Point, h []VerificationG1Point, y2 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// Interpolation is a paid mutator transaction binding the contract method 0x446bf71c.
//
// Solidity: function Interpolation(uint256 d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns((uint256,uint256))
func (_Contract *ContractTransactor) Interpolation(opts *bind.TransactOpts, d *big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Interpolation", d, v, indices, threshold)
}

// Interpolation is a paid mutator transaction binding the contract method 0x446bf71c.
//
// Solidity: function Interpolation(uint256 d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns((uint256,uint256))
func (_Contract *ContractSession) Interpolation(d *big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Interpolation(&_Contract.TransactOpts, d, v, indices, threshold)
}

// Interpolation is a paid mutator transaction binding the contract method 0x446bf71c.
//
// Solidity: function Interpolation(uint256 d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns((uint256,uint256))
func (_Contract *ContractTransactorSession) Interpolation(d *big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Interpolation(&_Contract.TransactOpts, d, v, indices, threshold)
}

// PVerify is a paid mutator transaction binding the contract method 0x0c65d6e2.
//
// Solidity: function PVerify(uint256 indexTallier, (uint256,uint256) DecShare, (uint256,uint256) a1, (uint256,uint256) a2, uint256 challenge, uint256 z) returns()
func (_Contract *ContractTransactor) PVerify(opts *bind.TransactOpts, indexTallier *big.Int, DecShare VerificationG1Point, a1 VerificationG1Point, a2 VerificationG1Point, challenge *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "PVerify", indexTallier, DecShare, a1, a2, challenge, z)
}

// PVerify is a paid mutator transaction binding the contract method 0x0c65d6e2.
//
// Solidity: function PVerify(uint256 indexTallier, (uint256,uint256) DecShare, (uint256,uint256) a1, (uint256,uint256) a2, uint256 challenge, uint256 z) returns()
func (_Contract *ContractSession) PVerify(indexTallier *big.Int, DecShare VerificationG1Point, a1 VerificationG1Point, a2 VerificationG1Point, challenge *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.PVerify(&_Contract.TransactOpts, indexTallier, DecShare, a1, a2, challenge, z)
}

// PVerify is a paid mutator transaction binding the contract method 0x0c65d6e2.
//
// Solidity: function PVerify(uint256 indexTallier, (uint256,uint256) DecShare, (uint256,uint256) a1, (uint256,uint256) a2, uint256 challenge, uint256 z) returns()
func (_Contract *ContractTransactorSession) PVerify(indexTallier *big.Int, DecShare VerificationG1Point, a1 VerificationG1Point, a2 VerificationG1Point, challenge *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.PVerify(&_Contract.TransactOpts, indexTallier, DecShare, a1, a2, challenge, z)
}

// RScodeVerify is a paid mutator transaction binding the contract method 0xbeaed4a0.
//
// Solidity: function RScodeVerify((uint256,uint256)[] v) returns(bool)
func (_Contract *ContractTransactor) RScodeVerify(opts *bind.TransactOpts, v []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "RScodeVerify", v)
}

// RScodeVerify is a paid mutator transaction binding the contract method 0xbeaed4a0.
//
// Solidity: function RScodeVerify((uint256,uint256)[] v) returns(bool)
func (_Contract *ContractSession) RScodeVerify(v []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.RScodeVerify(&_Contract.TransactOpts, v)
}

// RScodeVerify is a paid mutator transaction binding the contract method 0xbeaed4a0.
//
// Solidity: function RScodeVerify((uint256,uint256)[] v) returns(bool)
func (_Contract *ContractTransactorSession) RScodeVerify(v []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.RScodeVerify(&_Contract.TransactOpts, v)
}

// Tally is a paid mutator transaction binding the contract method 0xe7db3bb2.
//
// Solidity: function Tally(uint256 threshold, uint256 numCandidates, uint256 a, uint256 b) returns()
func (_Contract *ContractTransactor) Tally(opts *bind.TransactOpts, threshold *big.Int, numCandidates *big.Int, a *big.Int, b *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Tally", threshold, numCandidates, a, b)
}

// Tally is a paid mutator transaction binding the contract method 0xe7db3bb2.
//
// Solidity: function Tally(uint256 threshold, uint256 numCandidates, uint256 a, uint256 b) returns()
func (_Contract *ContractSession) Tally(threshold *big.Int, numCandidates *big.Int, a *big.Int, b *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Tally(&_Contract.TransactOpts, threshold, numCandidates, a, b)
}

// Tally is a paid mutator transaction binding the contract method 0xe7db3bb2.
//
// Solidity: function Tally(uint256 threshold, uint256 numCandidates, uint256 a, uint256 b) returns()
func (_Contract *ContractTransactorSession) Tally(threshold *big.Int, numCandidates *big.Int, a *big.Int, b *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Tally(&_Contract.TransactOpts, threshold, numCandidates, a, b)
}

// UploadBallotCipher is a paid mutator transaction binding the contract method 0x65d28554.
//
// Solidity: function UploadBallotCipher((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, (uint256,uint256)[] v, uint256 threshold) returns()
func (_Contract *ContractTransactor) UploadBallotCipher(opts *bind.TransactOpts, Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, v []VerificationG1Point, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadBallotCipher", Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, v, threshold)
}

// UploadBallotCipher is a paid mutator transaction binding the contract method 0x65d28554.
//
// Solidity: function UploadBallotCipher((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, (uint256,uint256)[] v, uint256 threshold) returns()
func (_Contract *ContractSession) UploadBallotCipher(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, v []VerificationG1Point, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadBallotCipher(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, v, threshold)
}

// UploadBallotCipher is a paid mutator transaction binding the contract method 0x65d28554.
//
// Solidity: function UploadBallotCipher((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, (uint256,uint256)[] v, uint256 threshold) returns()
func (_Contract *ContractTransactorSession) UploadBallotCipher(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, v []VerificationG1Point, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadBallotCipher(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, v, threshold)
}

// UploadPVSSShares is a paid mutator transaction binding the contract method 0xe283f130.
//
// Solidity: function UploadPVSSShares((uint256,uint256)[] v, (uint256,uint256)[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] challenge, uint256[] z) returns()
func (_Contract *ContractTransactor) UploadPVSSShares(opts *bind.TransactOpts, v []VerificationG1Point, c []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, challenge []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadPVSSShares", v, c, a1, a2, challenge, z)
}

// UploadPVSSShares is a paid mutator transaction binding the contract method 0xe283f130.
//
// Solidity: function UploadPVSSShares((uint256,uint256)[] v, (uint256,uint256)[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] challenge, uint256[] z) returns()
func (_Contract *ContractSession) UploadPVSSShares(v []VerificationG1Point, c []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, challenge []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadPVSSShares(&_Contract.TransactOpts, v, c, a1, a2, challenge, z)
}

// UploadPVSSShares is a paid mutator transaction binding the contract method 0xe283f130.
//
// Solidity: function UploadPVSSShares((uint256,uint256)[] v, (uint256,uint256)[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] challenge, uint256[] z) returns()
func (_Contract *ContractTransactorSession) UploadPVSSShares(v []VerificationG1Point, c []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, challenge []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadPVSSShares(&_Contract.TransactOpts, v, c, a1, a2, challenge, z)
}

// UploadParameters is a paid mutator transaction binding the contract method 0xb7e5723f.
//
// Solidity: function UploadParameters((uint256,uint256) g0, (uint256,uint256) h0, (uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) pkI, (uint256,uint256)[] sigmak, uint256 a, uint256 b, uint256 numCandidates) returns()
func (_Contract *ContractTransactor) UploadParameters(opts *bind.TransactOpts, g0 VerificationG1Point, h0 VerificationG1Point, g1 VerificationG2Point, pkI VerificationG2Point, sigmak []VerificationG1Point, a *big.Int, b *big.Int, numCandidates *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadParameters", g0, h0, g1, pkI, sigmak, a, b, numCandidates)
}

// UploadParameters is a paid mutator transaction binding the contract method 0xb7e5723f.
//
// Solidity: function UploadParameters((uint256,uint256) g0, (uint256,uint256) h0, (uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) pkI, (uint256,uint256)[] sigmak, uint256 a, uint256 b, uint256 numCandidates) returns()
func (_Contract *ContractSession) UploadParameters(g0 VerificationG1Point, h0 VerificationG1Point, g1 VerificationG2Point, pkI VerificationG2Point, sigmak []VerificationG1Point, a *big.Int, b *big.Int, numCandidates *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadParameters(&_Contract.TransactOpts, g0, h0, g1, pkI, sigmak, a, b, numCandidates)
}

// UploadParameters is a paid mutator transaction binding the contract method 0xb7e5723f.
//
// Solidity: function UploadParameters((uint256,uint256) g0, (uint256,uint256) h0, (uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) pkI, (uint256,uint256)[] sigmak, uint256 a, uint256 b, uint256 numCandidates) returns()
func (_Contract *ContractTransactorSession) UploadParameters(g0 VerificationG1Point, h0 VerificationG1Point, g1 VerificationG2Point, pkI VerificationG2Point, sigmak []VerificationG1Point, a *big.Int, b *big.Int, numCandidates *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadParameters(&_Contract.TransactOpts, g0, h0, g1, pkI, sigmak, a, b, numCandidates)
}

// UploadPublicKey is a paid mutator transaction binding the contract method 0x4ea9637d.
//
// Solidity: function UploadPublicKey((uint256,uint256)[] pks) returns()
func (_Contract *ContractTransactor) UploadPublicKey(opts *bind.TransactOpts, pks []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadPublicKey", pks)
}

// UploadPublicKey is a paid mutator transaction binding the contract method 0x4ea9637d.
//
// Solidity: function UploadPublicKey((uint256,uint256)[] pks) returns()
func (_Contract *ContractSession) UploadPublicKey(pks []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadPublicKey(&_Contract.TransactOpts, pks)
}

// UploadPublicKey is a paid mutator transaction binding the contract method 0x4ea9637d.
//
// Solidity: function UploadPublicKey((uint256,uint256)[] pks) returns()
func (_Contract *ContractTransactorSession) UploadPublicKey(pks []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadPublicKey(&_Contract.TransactOpts, pks)
}

// ZKRPVerify is a paid mutator transaction binding the contract method 0xb562c4ab.
//
// Solidity: function ZKRPVerify((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, uint256[] d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns(bool)
func (_Contract *ContractTransactor) ZKRPVerify(opts *bind.TransactOpts, Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, d []*big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "ZKRPVerify", Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, d, v, indices, threshold)
}

// ZKRPVerify is a paid mutator transaction binding the contract method 0xb562c4ab.
//
// Solidity: function ZKRPVerify((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, uint256[] d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns(bool)
func (_Contract *ContractSession) ZKRPVerify(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, d []*big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ZKRPVerify(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, d, v, indices, threshold)
}

// ZKRPVerify is a paid mutator transaction binding the contract method 0xb562c4ab.
//
// Solidity: function ZKRPVerify((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, uint256[] d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns(bool)
func (_Contract *ContractTransactorSession) ZKRPVerify(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, d []*big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ZKRPVerify(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, d, v, indices, threshold)
}

// Coefficient is a paid mutator transaction binding the contract method 0x3ae867e1.
//
// Solidity: function coefficient(uint256 i, uint256 n) returns(uint256)
func (_Contract *ContractTransactor) Coefficient(opts *bind.TransactOpts, i *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "coefficient", i, n)
}

// Coefficient is a paid mutator transaction binding the contract method 0x3ae867e1.
//
// Solidity: function coefficient(uint256 i, uint256 n) returns(uint256)
func (_Contract *ContractSession) Coefficient(i *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Coefficient(&_Contract.TransactOpts, i, n)
}

// Coefficient is a paid mutator transaction binding the contract method 0x3ae867e1.
//
// Solidity: function coefficient(uint256 i, uint256 n) returns(uint256)
func (_Contract *ContractTransactorSession) Coefficient(i *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Coefficient(&_Contract.TransactOpts, i, n)
}

// Inv is a paid mutator transaction binding the contract method 0x338255f3.
//
// Solidity: function inv(uint256 a, uint256 prime) returns(uint256)
func (_Contract *ContractTransactor) Inv(opts *bind.TransactOpts, a *big.Int, prime *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "inv", a, prime)
}

// Inv is a paid mutator transaction binding the contract method 0x338255f3.
//
// Solidity: function inv(uint256 a, uint256 prime) returns(uint256)
func (_Contract *ContractSession) Inv(a *big.Int, prime *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Inv(&_Contract.TransactOpts, a, prime)
}

// Inv is a paid mutator transaction binding the contract method 0x338255f3.
//
// Solidity: function inv(uint256 a, uint256 prime) returns(uint256)
func (_Contract *ContractTransactorSession) Inv(a *big.Int, prime *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Inv(&_Contract.TransactOpts, a, prime)
}
