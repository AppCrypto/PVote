// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerificationG1Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG1Point struct {
	X *big.Int
	Y *big.Int
}

// VerificationG2Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"Aggregate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"y1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"h\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"y2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"DVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetAggregateValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetDVerifyResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetPVerifyResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetTallyValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetZKRPResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"Interpolation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"indexTallier\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"DecShare\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"challenge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"PVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"}],\"name\":\"RScodeVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numCandidates\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"Tally\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Ej\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Uj\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Cj\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z1\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z2\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z3\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Uj\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"UploadBallotCipher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"c\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"challenge\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"UploadPVSSShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"h0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"pkI\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"sigmak\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numCandidates\",\"type\":\"uint256\"}],\"name\":\"UploadParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"pks\",\"type\":\"tuple[]\"}],\"name\":\"UploadPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Ej\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Fj2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Uj\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_Cj\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z1\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z2\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z3\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"Uj\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"d\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"v\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ZKRPVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"coefficient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prime\",\"type\":\"uint256\"}],\"name\":\"inv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608080604052346015576134d3908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630c65d6e214610147578063338255f3146101425780633ae867e11461013d578063446bf71c146101385780634ea9637d1461013357806356af27dd1461012e57806365d285541461012957806375457b93146101245780637e3d3acb1461011f5780639e134b591461011a578063b52c5ff214610115578063b562c4ab14610110578063b7e5723f1461010b578063beaed4a014610106578063c3ceb16b14610101578063db301a7f146100fc578063e283f130146100f7578063e7db3bb2146100f25763f0934fe9146100ed57600080fd5b611be5565b6119f6565b61191f565b6117b1565b6116d6565b6116be565b611620565b6113dc565b61126e565b6111d0565b6110b7565b6108d8565b61071e565b610636565b6105d0565b610527565b610404565b610376565b6102b9565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761017d57604052565b61014c565b60c081019081106001600160401b0382111761017d57604052565b90601f801991011681019081106001600160401b0382111761017d57604052565b60409060631901126101e657604051906101d782610162565b60643582526084356020830152565b600080fd5b60409060a31901126101e6576040519061020482610162565b60a435825260c4356020830152565b60409060031901126101e6576040519061022c82610162565b60043582526024356020830152565b60409060431901126101e6576040519061025482610162565b60443582526064356020830152565b6040906101031901126101e6576040519061027d82610162565b610104358252610124356020830152565b6040906101431901126101e657604051906102a882610162565b610144358252610164356020830152565b346101e6576101203660031901126101e65760043560403660231901126101e657604051906102e782610162565b60243582526044356020830152600161034a610302366101be565b61030b366101eb565b60e4359061010435928761031e88611c7e565b509161032989611ca2565b5061034461033e610338611d1b565b95611d53565b91611d53565b93612823565b15150361036c5761035d61036292611f34565b61209e565b61036a611db1565b005b505061036a611d71565b346101e65760403660031901126101e657600435602435906001198201918083116103ff5760c091602091600094604051926103b184610182565b84845284808501528460408501526060840152608083015260a08201526040519283916103de848461019d565b83368437856005600019f1156103fb575160405190815260209150f35b5080fd5b612134565b346101e65760403660031901126101e65760206104256024356004356121b5565b604051908152f35b6001600160401b03811161017d5760051b60200190565b81601f820112156101e65780359061045b8261042d565b92610469604051948561019d565b82845260208085019360061b830101918183116101e657602001925b828410610493575050505090565b60006040858403126104c75750602060409182516104b081610162565b863581528287013583820152815201930192610485565b80fd5b9080601f830112156101e65781356104e18161042d565b926104ef604051948561019d565b81845260208085019260051b8201019283116101e657602001905b8282106105175750505090565b813581526020918201910161050a565b346101e65760803660031901126101e6576004356024356001600160401b0381116101e65761055a903690600401610444565b90604435906001600160401b0382116101e65760409261058161058b9336906004016104ca565b9060643592612343565b6105a18251809260208091805184520151910152565bf35b60206003198201126101e657600435906001600160401b0382116101e6576105cd91600401610444565b90565b346101e6576105de366105a3565b60005b815181101561036a576105f4818361232f565b5190601054600160401b81101561017d5780600161061792016010556010611cff565b6106315782518155602090920151600192830155016105e1565b611f06565b346101e65760003660031901126101e65760005b610652611fcf565b50548110156106be5760019061066e610669611d1b565b612f96565b601154919060005b83811061068f5750610689919250611f6c565b0161064a565b906106b785916106b16106ab866106a587612002565b50611cff565b50611d53565b90613069565b9101610676565b60005b6106c961201d565b505481101561036a576001906106e0610669611d1b565b601354919060005b83811061070157506106fb919250611f8d565b016106c1565b9061071785916106b16106ab866106a587612050565b91016106e8565b346101e6576101803660031901126101e6576004356001600160401b0381116101e65761074f903690600401610444565b6024356001600160401b0381116101e65761076e903690600401610444565b906044356001600160401b0381116101e65761078e903690600401610444565b916064356001600160401b0381116101e6576107ae903690600401610444565b6084356001600160401b0381116101e6576107cd903690600401610444565b60a4356001600160401b0381116101e6576107ec9036906004016104ca565b60c4356001600160401b0381116101e65761080b9036906004016104ca565b60e4356001600160401b0381116101e65761082a9036906004016104ca565b91610104356001600160401b0381116101e65761084b9036906004016104ca565b93610124356001600160401b0381116101e65761086c903690600401610444565b9561014435996001600160401b038b116101e65761089161036a9b3690600401610444565b98610164359a61269a565b602060408183019282815284518094520192019060005b8181106108c05750505090565b825115158452602093840193909201916001016108b3565b346101e65760003660031901126101e657604051601854808252906020810160186000527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e926000935b81601f860110610e1c5791610a4b948492610a3f945491818110610e00575b818110610de1575b818110610dc2575b818110610da3575b818110610d85575b818110610d66575b818110610d47575b818110610d28575b818110610d09575b818110610cea575b818110610ccb575b818110610cac575b818110610c8d575b818110610c6e575b818110610c4f575b818110610c30575b818110610c11575b818110610bf2575b818110610bd3575b818110610bb4575b818110610b95575b818110610b76575b818110610b57575b818110610b38575b818110610b19575b818110610afa575b818110610adb575b818110610abc575b818110610a9d575b818110610a7e575b818110610a5f575b10610a4f575b50038261019d565b6040519182918261089c565b0390f35b60f81c1515815260200138610a37565b92602081610a7660019360ff8760f01c1615159052565b019301610a31565b92602081610a9560019360ff8760e81c1615159052565b019301610a29565b92602081610ab460019360ff8760e01c1615159052565b019301610a21565b92602081610ad360019360ff8760d81c1615159052565b019301610a19565b92602081610af260019360ff8760d01c1615159052565b019301610a11565b92602081610b1160019360ff8760c81c1615159052565b019301610a09565b92602081610b3060019360ff8760c01c1615159052565b019301610a01565b92602081610b4f60019360ff8760b81c1615159052565b0193016109f9565b92602081610b6e60019360ff8760b01c1615159052565b0193016109f1565b92602081610b8d60019360ff8760a81c1615159052565b0193016109e9565b92602081610bac60019360ff8760a01c1615159052565b0193016109e1565b92602081610bcb60019360ff8760981c1615159052565b0193016109d9565b92602081610bea60019360ff8760901c1615159052565b0193016109d1565b92602081610c0960019360ff8760881c1615159052565b0193016109c9565b92602081610c2860019360ff8760801c1615159052565b0193016109c1565b92602081610c4760019360ff8760781c1615159052565b0193016109b9565b92602081610c6660019360ff8760701c1615159052565b0193016109b1565b92602081610c8560019360ff8760681c1615159052565b0193016109a9565b92602081610ca460019360ff8760601c1615159052565b0193016109a1565b92602081610cc360019360ff8760581c1615159052565b019301610999565b92602081610ce260019360ff8760501c1615159052565b019301610991565b92602081610d0160019360ff8760481c1615159052565b019301610989565b92602081610d2060019360ff8760401c1615159052565b019301610981565b92602081610d3f60019360ff8760381c1615159052565b019301610979565b92602081610d5e60019360ff8760301c1615159052565b019301610971565b92602081610d7d60019360ff8760281c1615159052565b019301610969565b92602081610d9b60019360ff87851c1615159052565b019301610961565b92602081610dba60019360ff8760181c1615159052565b019301610959565b92602081610dd960019360ff8760101c1615159052565b019301610951565b92602081610df860019360ff8760081c1615159052565b019301610949565b92602081610e1460019360ff871615159052565b019301610941565b9160016104006020926110ac8654610e388360ff831615159052565b610e4b86840160ff8360081c1615159052565b610e5f6040840160ff8360101c1615159052565b610e736060840160ff8360181c1615159052565b80861c60ff1615156080840152610e9460a0840160ff8360281c1615159052565b610ea860c0840160ff8360301c1615159052565b610ebc60e0840160ff8360381c1615159052565b610ed1610100840160ff8360401c1615159052565b610ee6610120840160ff8360481c1615159052565b610efb610140840160ff8360501c1615159052565b610f10610160840160ff8360581c1615159052565b610f25610180840160ff8360601c1615159052565b610f3a6101a0840160ff8360681c1615159052565b610f4f6101c0840160ff8360701c1615159052565b610f646101e0840160ff8360781c1615159052565b610f79610200840160ff8360801c1615159052565b610f8e610220840160ff8360881c1615159052565b610fa3610240840160ff8360901c1615159052565b610fb8610260840160ff8360981c1615159052565b610fcd610280840160ff8360a01c1615159052565b610fe26102a0840160ff8360a81c1615159052565b610ff76102c0840160ff8360b01c1615159052565b61100c6102e0840160ff8360b81c1615159052565b611021610300840160ff8360c01c1615159052565b611036610320840160ff8360c81c1615159052565b61104b610340840160ff8360d01c1615159052565b611060610360840160ff8360d81c1615159052565b611075610380840160ff8360e01c1615159052565b61108a6103a0840160ff8360e81c1615159052565b61109f6103c0840160ff8360f01c1615159052565b60f81c15156103e0830152565b019301940193610922565b346101e6576101203660031901126101e6576110d236610213565b6044356001600160401b0381116101e6576110f1903690600401610444565b906064356001600160401b0381116101e657611111903690600401610444565b906084356001600160401b0381116101e657611131903690600401610444565b60a4356001600160401b0381116101e657611150903690600401610444565b60c4356001600160401b0381116101e65761116f903690600401610444565b9060e4356001600160401b0381116101e65761118f9036906004016104ca565b9261010435956001600160401b0387116101e657610a4b976111b86111be9836906004016104ca565b9661276a565b60405190151581529081906020820190565b6101c03660031901126101e6576111e636610213565b6111ef3661023b565b9060403660831901126101e6576040519061120982610162565b608435825260a435602083015260403660c31901126101e6576020926112649260405161123581610162565b60c435815260e4358682015261124a36610263565b906112543661028e565b9261018435946101a43596612823565b6040519015158152f35b346101e65760003660031901126101e657604051601a548082529060208101601a6000527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e926000935b81601f8601106113b55791610a4b948492610a3f945491818110610e0057818110610de157818110610dc257818110610da357818110610d8557818110610d6657818110610d4757818110610d2857818110610d0957818110610cea57818110610ccb57818110610cac57818110610c8d57818110610c6e57818110610c4f57818110610c3057818110610c1157818110610bf257818110610bd357818110610bb457818110610b9557818110610b7657818110610b5757818110610b3857818110610b1957818110610afa57818110610adb57818110610abc57818110610a9d57818110610a7e57818110610a5f5710610a4f5750038261019d565b9160016104006020926113d18654610e388360ff831615159052565b0193019401936112b8565b346101e6576101c03660031901126101e6576004356001600160401b0381116101e65761140d903690600401610444565b6024356001600160401b0381116101e65761142c903690600401610444565b6044356001600160401b0381116101e65761144b903690600401610444565b916064356001600160401b0381116101e65761146b903690600401610444565b916084356001600160401b0381116101e65761148b903690600401610444565b60a4356001600160401b0381116101e6576114aa9036906004016104ca565b60c4356001600160401b0381116101e6576114c99036906004016104ca565b60e4356001600160401b0381116101e6576114e89036906004016104ca565b610104356001600160401b0381116101e6576115089036906004016104ca565b90610124356001600160401b0381116101e657611529903690600401610444565b92610144356001600160401b0381116101e65761154a9036906004016104ca565b94610164356001600160401b0381116101e65761156b903690600401610444565b96610184359a6001600160401b038c116101e657610a4b9c6115946111be9d36906004016104ca565b9a6101a4359c612947565b9080601f830112156101e65760408051926115ba828561019d565b839181019283116101e657905b8282106115d45750505090565b81358152602091820191016115c7565b906080610103198301126101e6576040516115fe81610162565b602061161b82946116118161010461159f565b845261014461159f565b910152565b346101e6576102003660031901126101e65761163b36610213565b6116443661023b565b9060803660831901126101e6576040519161165e83610162565b61166936608461159f565b83526116763660c461159f565b6020840152611684366115e4565b9261018435936001600160401b0385116101e6576116a961036a953690600401610444565b906101a435926101c435946101e43596612c02565b346101e65760206112646116d1366105a3565b612cb7565b346101e65760003660031901126101e6576014546116f38161042d565b90611701604051928361019d565b808252601460009081527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec602084015b838310611793578460405180916020820160208352815180915260206040840192019060005b818110611765575050500390f35b919350916020604082611785600194885160208091805184520151910152565b019401910191849392611757565b600260206001926117a385611d53565b815201920192019190611731565b346101e65760003660031901126101e657604051601954808252906020810160196000527f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695926000935b81601f8601106118f85791610a4b948492610a3f945491818110610e0057818110610de157818110610dc257818110610da357818110610d8557818110610d6657818110610d4757818110610d2857818110610d0957818110610cea57818110610ccb57818110610cac57818110610c8d57818110610c6e57818110610c4f57818110610c3057818110610c1157818110610bf257818110610bd357818110610bb457818110610b9557818110610b7657818110610b5757818110610b3857818110610b1957818110610afa57818110610adb57818110610abc57818110610a9d57818110610a7e57818110610a5f5710610a4f5750038261019d565b9160016104006020926119148654610e388360ff831615159052565b0193019401936117fb565b346101e65760c03660031901126101e6576004356001600160401b0381116101e65761194f903690600401610444565b6024356001600160401b0381116101e65761196e903690600401610444565b906044356001600160401b0381116101e65761198e903690600401610444565b6064356001600160401b0381116101e6576119ad903690600401610444565b6084356001600160401b0381116101e6576119cc9036906004016104ca565b9160a435946001600160401b0386116101e6576119f061036a9636906004016104ca565b94612d77565b346101e65760803660031901126101e657602435606435604435600435611a1c816122b0565b611a2582612e5c565b9160005b818110611b575750611a3a86612e5c565b9160005b878110611aea5787876000885b838210611a5457005b611a6681611a6184612159565b6124bf565b611a7085856124bf565b811015611ae057611a8083611ce0565b5054611a9382611a8e611d37565b613022565b511480611abb575b611aa757600101611a66565b91611ab4600192936120e9565b0190611a4b565b506001611ac784611ce0565b5001546020611ad883611a8e611d37565b015114611a9b565b5090600190611ab4565b80611b01848488611afc600196612f28565b612343565b611b0b828761232f565b52611b16818661232f565b50611b51611b42611b2683611ce0565b50611b3d61033e611b37868b61232f565b516130b9565b613069565b611b4b83611ce0565b90611f1c565b01611a3e565b80611b78611b73611b6960019461206b565b90549060031b1c90565b612159565b611b82828661232f565b52611b8f6106ab82611cc1565b611b99828761232f565b52611ba4818661232f565b5001611a29565b602060408183019282815284518094520192019060005b818110611bcf5750505090565b8251845260209384019390920191600101611bc2565b346101e65760003660031901126101e65760405180602060175491828152019060176000527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c159060005b818110611c5257610a4b85611c468187038261019d565b60405191829182611bab565b8254845260209093019260019283019201611c2f565b634e487b7160e01b600052603260045260246000fd5b601054811015611c9d57601060005260206000209060011b0190600090565b611c68565b601454811015611c9d57601460005260206000209060011b0190600090565b601254811015611c9d57601260005260206000209060011b0190600090565b601554811015611c9d57601560005260206000209060011b0190600090565b8054821015611c9d5760005260206000209060011b0190600090565b60405190611d2882610162565b60005482526001546020830152565b60405190611d4482610162565b60025482526003546020830152565b90604051611d6081610162565b602060018294805484520154910152565b601a54600160401b81101561017d576001810180601a55811015611c9d57601a60005260206000208160051c019060ff60f883549260031b161b19169055565b601a54600160401b81101561017d576001810180601a55811015611c9d57601a60005260206000208160051c019060f882549160031b169060ff6001831b921b1916179055565b601854600160401b81101561017d576001810180601855811015611c9d57601860005260206000208160051c019060ff60f883549260031b161b19169055565b601854600160401b81101561017d576001810180601855811015611c9d57601860005260206000208160051c019060f882549160031b169060ff6001831b921b1916179055565b601954600160401b81101561017d576001810180601955811015611c9d57601960005260206000208160051c019060ff60f883549260031b161b19169055565b601954600160401b81101561017d576001810180601955811015611c9d57601960005260206000208160051c019060f882549160031b169060ff6001831b921b1916179055565b634e487b7160e01b600052600060045260246000fd5b9190610631578051825560200151600190910155565b565b601254600160401b81101561017d57806001611f5592016012556012611cff565b919091610631578051825560200151600190910155565b601454600160401b81101561017d57806001611f5592016014556014611cff565b601554600160401b81101561017d57806001611f5592016015556015611cff565b600c54600160401b81101561017d57806001611f559201600c55600c611cff565b60115415611c9d57601160009081527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6891565b601154811015611c9d57601160005260206000200190600090565b60135415611c9d57601360009081527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09091565b601354811015611c9d57601360005260206000200190600090565b601654811015611c9d57601660005260206000200190600090565b8054821015611c9d5760005260206000200190600090565b601654600160401b81101561017d57600181016016556000601654821015611c9d57601690527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155565b601754600160401b81101561017d57600181016017556000601754821015611c9d57601790527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150155565b634e487b7160e01b600052601160045260246000fd5b6000198101919082116103ff57565b90600182018092116103ff57565b90600282018092116103ff57565b90600382018092116103ff57565b90600482018092116103ff57565b90600582018092116103ff57565b634e487b7160e01b600052601260045260246000fd5b60019260015b600184018085116103ff57811015612291578083036121dd575b6001016121bb565b9360c06121ea8685612f48565b6040516000916121f982610182565b602082526020808301526020604083015260608201527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff608082015260008051602061347e83398151915260a082015260209060405193849161225c848461019d565b83368437846005600019f1156104c757505160019160008051602061347e8339815191529160009183919009089490506121d5565b50915050565b604051906122a482610162565b60006020838281520152565b906122ba8261042d565b6122c7604051918261019d565b82815280926122d8601f199161042d565b0190602036910137565b805115611c9d5760200190565b805160011015611c9d5760400190565b805160021015611c9d5760600190565b805160031015611c9d5760800190565b805160041015611c9d5760a00190565b8051821015611c9d5760209160051b010190565b909261234d612297565b50612357816122b0565b92600080937f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff915b8481106123d957505050505050612397610669611d1b565b916000925b82518410156123d2576123ca6001916106b16123b8878661232f565b516123c3888861232f565b5190613022565b93019261239c565b9250505090565b85906001848160005b8981106124235750906123f491612ec1565b9261241e5760019260008051602061347e8339815191529109612417828a61232f565b520161237f565b61219f565b91509192935080840361243f575b6001018893929186916123e2565b91909761245661244f848961232f565b5186612f48565b9061241e5760008051602061347e833981519152910990600160008051602061347e83398151915261249d61248b868a61232f565b51612496858b61232f565b5190612f48565b60009a09919050612431565b906006820291808304600614901517156103ff57565b818102929181159184041417156103ff57565b601354600160401b81101561017d578060016124f392016013556013612086565b61063157815191600160401b831161017d578154838355808410612561575b506020612526910191600052602060002090565b6000915b8383106125375750505050565b60026020826125556001945186906020600191805184550151910155565b0192019201919061252a565b6001600160ff1b03811681036103ff576001600160ff1b03841684036103ff578260005260206000209060011b8101908460011b015b8181106125a45750612512565b60008082556001820155600201612597565b601154600160401b81101561017d578060016125d792016011556011612086565b61063157815191600160401b831161017d578154838355808410612645575b50602061260a910191600052602060002090565b6000915b83831061261b5750505050565b60026020826126396001945186906020600191805184550151910155565b0192019201919061260e565b6001600160ff1b03811681036103ff576001600160ff1b03841684036103ff578260005260206000209060011b8101908460011b015b81811061268857506125f6565b6000808255600182015560020161267b565b969390989a99979491928b96936126b08c6122b0565b9a60005b8d81106127365750600f54996126c98b6122b0565b9a60005b8181106127015750509160019d9b99979593916126ee9d9b99979593612947565b1515146126f85750565b611f32906124d2565b60019192939495969798999a9b508c6127238261271d81612f28565b9261232f565b5201908f9a9998979695949392916126cd565b9091929394959697985060018101908181116103ff57600191612759828f61232f565b5201908d98979695949392916126b4565b9491969390959261277a87612cb7565b61278b575050505050505050600090565b6010549760005b8981106127a85750505050505050505050600190565b6128078888888888888f612800896127f9816127f2818f96816127e4816127dd816127d6816127eb9761232f565b519c61232f565b519b61232f565b519a61232f565b519961232f565b519861232f565b519761232f565b5196612823565b1561281457600101612792565b50505050505050505050600090565b866128508961284a612862989a61284461285c989d612856979a989a613022565b98613022565b94613022565b97613022565b92613069565b93613069565b918351815114938415946128b2575b505082156128a5575b8215612891575b505061288c57600190565b600090565b602091925081015191015114153880612881565b805182511415925061287a565b602090810151910151141592503880612871565b60405191906000835b600282106128e557505050611f3260408361019d565b60016020819285548152019301910190916128cf565b6040519061290882610162565b8161291360046128c6565b8152602061161b60066128c6565b6040519061292e82610162565b8161293960086128c6565b8152602061161b600a6128c6565b989392959990969b9c9197949a9c60005b8251811015612b76576129998f8e6123c38461271d89886129839661297d858d61232f565b51612343565b6106b1612990848b61232f565b51611a8e611d37565b6129a3828761232f565b515181511490811591612b59575b50156129ce5750505050505050505050505050505061288c611df8565b612a0e8c6106b18f846129ff8c6106b1612a05848f612990976123c3836129f8816129ff9561232f565b519261232f565b9361232f565b51611a8e611d1b565b612a18828a61232f565b515181511490811591612b3c575b5015612a435750505050505050505050505050505061288c611df8565b80808f8f8f8f8f91938f91869581878097612a5f82809661232f565b5191612a6a9161232f565b51612a7491613022565b98612a7e9161232f565b5191612a899161232f565b51612a9391613022565b612a9c906130b9565b93612aa69161232f565b51612aaf611d1b565b90612ab991613022565b93612ac39161232f565b51612acd906130b9565b94612ad79161232f565b51612ae1906130b9565b90612aea6128fb565b93612af36128fb565b90612afc612921565b91612b056128fb565b94612b0e6128fb565b97612b18996131f5565b15612b2557600101612958565b50505050505050505050505050505061288c611df8565b9050602080612b4b848c61232f565b510151910151141538612a26565b9050602080612b68848961232f565b5101519101511415386129b1565b505050505050505050505050505050612b8d611e38565b600190565b60005b60028110612ba1575050565b60019060208351930192816006015501612b95565b805160005b60028110612bed5750506020015160005b60028110612bd8575050565b6001906020835193019281600a015501612bcc565b60019060208351930192816008015501612bbb565b805160005560200151600155929695949392612c2690805160025560200151600355565b805160005b60028110612c93575050612c6192612c57612c66969593612c526020612c5c950151612b92565b612bb6565b600d55565b600e55565b600f55565b60005b8251811015612c8e5780612c88612c826001938661232f565b51611fae565b01612c69565b509050565b60019060208351930192816004015501612c2b565b60001981146103ff5760010190565b90612cc282516122b0565b60015b8351808211612d0b579060008051602061347e8339815191526000612ced612d0694846121b5565b08612d00612cfa8361214a565b8561232f565b52612ca8565b612cc5565b5050919091612d20612d1b611d37565b612fdc565b916000925b8151841015612d4957612d416001916106b16123b8878661232f565b930192612d25565b9250505080516002541490811591612d66575b5061288c57600190565b602091500151600354141538612d5c565b9594929093919360005b8751811015612e4357612d92611d37565b60105490612d9f8261042d565b91612dad604051938461019d565b808352601060009081527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6729190602085015b828210612e175750505050858585612dfa948b8e8c9661276a565b15612e0757600101612d81565b5050505050509050611f32611e7f565b60026020859f969592612e2f999e9899600194611d53565b8152019e0191019092939c9a95949a612ddf565b509350505050611f32919250612e57611ebf565b6125b6565b90612e668261042d565b612e73604051918261019d565b8281528092612e84601f199161042d565b019060005b828110612e9557505050565b602090612ea0612297565b82828501015201612e89565b604051906020612ebc818461019d565b368337565b60c09160405191612ed183610182565b60208352602080840152602060408401526060830152608082015260008051602061347e83398151915260a0820152602090604051928391612f13848461019d565b8336843760006005600019f1156101e6575190565b60008051602061347e8339815191529081038181116103ff576000900890565b81811115612f7157905b81039081116103ff57600060008051602061347e833981519152910890565b60008051602061347e83398151915281018091116103ff5790612f52565b156101e657565b90612f9f612297565b91826080606092602060405191612fb6868461019d565b8536843780518352015160208201526000604082015260076107cf195a01fa156101e657565b90612fe5612297565b91826080606092602060405191612ffc868461019d565b8536843780518352015160208201526001604082015260076107cf195a01fa156101e657565b906080929161302f612297565b938491606093602060405192613045878561019d565b863685378051845201516020830152604082015260076107cf195a01fa156101e657565b6020929160c060609261307a612297565b958693816040519361308d60808661019d565b6080368637805185520151828401528051604084015201518482015260066107cf195a01fa156101e657565b6130c1612297565b5080511580613173575b613158577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208251920151067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781116103ff576040519161314e83610162565b8252602082015290565b5060405161316581610162565b600081526000602082015290565b506020810151156130cb565b6040519061318e60c08361019d565b6005825281601f196131a0600561042d565b019060409060005b8381106131b55750505050565b60209083516131c381610162565b84516131cf868261019d565b85368237815284516131e1868261019d565b8536823783820152828285010152016131a8565b97909199989596949396613209600561042d565b97613217604051998a61019d565b60058952601f19613228600561042d565b0160005b8181106133105750506105cd9a9b61324261317f565b9a61324c8b6122e2565b526132568a6122e2565b506132608a6122ef565b5261326a896122ef565b50613274896122ff565b5261327e886122ff565b506132888861230f565b526132928761230f565b5061329c8761231f565b526132a68661231f565b506132b0876122e2565b526132ba866122e2565b506132c4866122ef565b526132ce856122ef565b506132d8856122ff565b526132e2846122ff565b506132ec8461230f565b526132f68361230f565b506133008361231f565b5261330a8261231f565b50613328565b808b6020809361331e612297565b920101520161322c565b805161333683518214612f8f565b61333f816124a9565b92613349846122b0565b9260005b83811061338457505050506020809261337e92613368612eac565b94859260051b910160086107cf195a01fa612f8f565b51151590565b806133916001928461232f565b515161339c826124a9565b906133a96000928961232f565b5260206133b6838661232f565b5101516133ce6133c8611b73856124a9565b8961232f565b526133d9828661232f565b5151516133f06133c86133eb856124a9565b612167565b526134066133fe838761232f565b515160200190565b5161341b6133c8613416856124a9565b612175565b526020613428838761232f565b51015190505161344861344261343d846124a9565b612183565b8861232f565b526134616020613458838761232f565b51015160200190565b51613476613442613471846124a9565b612191565b520161334d56fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220de90b686767e0504bd3c2f4755d233b2cbde3b5356b829001de87a89a4e2425064736f6c634300081c0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetAggregateValue is a free data retrieval call binding the contract method 0xc3ceb16b.
//
// Solidity: function GetAggregateValue() view returns((uint256,uint256)[])
func (_Contract *ContractCaller) GetAggregateValue(opts *bind.CallOpts) ([]VerificationG1Point, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetAggregateValue")

	if err != nil {
		return *new([]VerificationG1Point), err
	}

	out0 := *abi.ConvertType(out[0], new([]VerificationG1Point)).(*[]VerificationG1Point)

	return out0, err

}

// GetAggregateValue is a free data retrieval call binding the contract method 0xc3ceb16b.
//
// Solidity: function GetAggregateValue() view returns((uint256,uint256)[])
func (_Contract *ContractSession) GetAggregateValue() ([]VerificationG1Point, error) {
	return _Contract.Contract.GetAggregateValue(&_Contract.CallOpts)
}

// GetAggregateValue is a free data retrieval call binding the contract method 0xc3ceb16b.
//
// Solidity: function GetAggregateValue() view returns((uint256,uint256)[])
func (_Contract *ContractCallerSession) GetAggregateValue() ([]VerificationG1Point, error) {
	return _Contract.Contract.GetAggregateValue(&_Contract.CallOpts)
}

// GetDVerifyResult is a free data retrieval call binding the contract method 0xdb301a7f.
//
// Solidity: function GetDVerifyResult() view returns(bool[])
func (_Contract *ContractCaller) GetDVerifyResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetDVerifyResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetDVerifyResult is a free data retrieval call binding the contract method 0xdb301a7f.
//
// Solidity: function GetDVerifyResult() view returns(bool[])
func (_Contract *ContractSession) GetDVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetDVerifyResult(&_Contract.CallOpts)
}

// GetDVerifyResult is a free data retrieval call binding the contract method 0xdb301a7f.
//
// Solidity: function GetDVerifyResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetDVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetDVerifyResult(&_Contract.CallOpts)
}

// GetPVerifyResult is a free data retrieval call binding the contract method 0xb52c5ff2.
//
// Solidity: function GetPVerifyResult() view returns(bool[])
func (_Contract *ContractCaller) GetPVerifyResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetPVerifyResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetPVerifyResult is a free data retrieval call binding the contract method 0xb52c5ff2.
//
// Solidity: function GetPVerifyResult() view returns(bool[])
func (_Contract *ContractSession) GetPVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetPVerifyResult(&_Contract.CallOpts)
}

// GetPVerifyResult is a free data retrieval call binding the contract method 0xb52c5ff2.
//
// Solidity: function GetPVerifyResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetPVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetPVerifyResult(&_Contract.CallOpts)
}

// GetTallyValue is a free data retrieval call binding the contract method 0xf0934fe9.
//
// Solidity: function GetTallyValue() view returns(uint256[])
func (_Contract *ContractCaller) GetTallyValue(opts *bind.CallOpts) ([]*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetTallyValue")

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetTallyValue is a free data retrieval call binding the contract method 0xf0934fe9.
//
// Solidity: function GetTallyValue() view returns(uint256[])
func (_Contract *ContractSession) GetTallyValue() ([]*big.Int, error) {
	return _Contract.Contract.GetTallyValue(&_Contract.CallOpts)
}

// GetTallyValue is a free data retrieval call binding the contract method 0xf0934fe9.
//
// Solidity: function GetTallyValue() view returns(uint256[])
func (_Contract *ContractCallerSession) GetTallyValue() ([]*big.Int, error) {
	return _Contract.Contract.GetTallyValue(&_Contract.CallOpts)
}

// GetZKRPResult is a free data retrieval call binding the contract method 0x75457b93.
//
// Solidity: function GetZKRPResult() view returns(bool[])
func (_Contract *ContractCaller) GetZKRPResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetZKRPResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetZKRPResult is a free data retrieval call binding the contract method 0x75457b93.
//
// Solidity: function GetZKRPResult() view returns(bool[])
func (_Contract *ContractSession) GetZKRPResult() ([]bool, error) {
	return _Contract.Contract.GetZKRPResult(&_Contract.CallOpts)
}

// GetZKRPResult is a free data retrieval call binding the contract method 0x75457b93.
//
// Solidity: function GetZKRPResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetZKRPResult() ([]bool, error) {
	return _Contract.Contract.GetZKRPResult(&_Contract.CallOpts)
}

// Aggregate is a paid mutator transaction binding the contract method 0x56af27dd.
//
// Solidity: function Aggregate() returns()
func (_Contract *ContractTransactor) Aggregate(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Aggregate")
}

// Aggregate is a paid mutator transaction binding the contract method 0x56af27dd.
//
// Solidity: function Aggregate() returns()
func (_Contract *ContractSession) Aggregate() (*types.Transaction, error) {
	return _Contract.Contract.Aggregate(&_Contract.TransactOpts)
}

// Aggregate is a paid mutator transaction binding the contract method 0x56af27dd.
//
// Solidity: function Aggregate() returns()
func (_Contract *ContractTransactorSession) Aggregate() (*types.Transaction, error) {
	return _Contract.Contract.Aggregate(&_Contract.TransactOpts)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DVerify is a paid mutator transaction binding the contract method 0x7e3d3acb.
//
// Solidity: function DVerify((uint256,uint256) g, (uint256,uint256)[] y1, (uint256,uint256)[] a1, (uint256,uint256)[] h, (uint256,uint256)[] y2, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns(bool)
func (_Contract *ContractTransactor) DVerify(opts *bind.TransactOpts, g VerificationG1Point, y1 []VerificationG1Point, a1 []VerificationG1Point, h []VerificationG1Point, y2 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DVerify", g, y1, a1, h, y2, a2, c, z)
}

// DVerify is a paid mutator transaction binding the contract method 0x7e3d3acb.
//
// Solidity: function DVerify((uint256,uint256) g, (uint256,uint256)[] y1, (uint256,uint256)[] a1, (uint256,uint256)[] h, (uint256,uint256)[] y2, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns(bool)
func (_Contract *ContractSession) DVerify(g VerificationG1Point, y1 []VerificationG1Point, a1 []VerificationG1Point, h []VerificationG1Point, y2 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DVerify is a paid mutator transaction binding the contract method 0x7e3d3acb.
//
// Solidity: function DVerify((uint256,uint256) g, (uint256,uint256)[] y1, (uint256,uint256)[] a1, (uint256,uint256)[] h, (uint256,uint256)[] y2, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns(bool)
func (_Contract *ContractTransactorSession) DVerify(g VerificationG1Point, y1 []VerificationG1Point, a1 []VerificationG1Point, h []VerificationG1Point, y2 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// Interpolation is a paid mutator transaction binding the contract method 0x446bf71c.
//
// Solidity: function Interpolation(uint256 d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns((uint256,uint256))
func (_Contract *ContractTransactor) Interpolation(opts *bind.TransactOpts, d *big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Interpolation", d, v, indices, threshold)
}

// Interpolation is a paid mutator transaction binding the contract method 0x446bf71c.
//
// Solidity: function Interpolation(uint256 d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns((uint256,uint256))
func (_Contract *ContractSession) Interpolation(d *big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Interpolation(&_Contract.TransactOpts, d, v, indices, threshold)
}

// Interpolation is a paid mutator transaction binding the contract method 0x446bf71c.
//
// Solidity: function Interpolation(uint256 d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns((uint256,uint256))
func (_Contract *ContractTransactorSession) Interpolation(d *big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Interpolation(&_Contract.TransactOpts, d, v, indices, threshold)
}

// PVerify is a paid mutator transaction binding the contract method 0x0c65d6e2.
//
// Solidity: function PVerify(uint256 indexTallier, (uint256,uint256) DecShare, (uint256,uint256) a1, (uint256,uint256) a2, uint256 challenge, uint256 z) returns()
func (_Contract *ContractTransactor) PVerify(opts *bind.TransactOpts, indexTallier *big.Int, DecShare VerificationG1Point, a1 VerificationG1Point, a2 VerificationG1Point, challenge *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "PVerify", indexTallier, DecShare, a1, a2, challenge, z)
}

// PVerify is a paid mutator transaction binding the contract method 0x0c65d6e2.
//
// Solidity: function PVerify(uint256 indexTallier, (uint256,uint256) DecShare, (uint256,uint256) a1, (uint256,uint256) a2, uint256 challenge, uint256 z) returns()
func (_Contract *ContractSession) PVerify(indexTallier *big.Int, DecShare VerificationG1Point, a1 VerificationG1Point, a2 VerificationG1Point, challenge *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.PVerify(&_Contract.TransactOpts, indexTallier, DecShare, a1, a2, challenge, z)
}

// PVerify is a paid mutator transaction binding the contract method 0x0c65d6e2.
//
// Solidity: function PVerify(uint256 indexTallier, (uint256,uint256) DecShare, (uint256,uint256) a1, (uint256,uint256) a2, uint256 challenge, uint256 z) returns()
func (_Contract *ContractTransactorSession) PVerify(indexTallier *big.Int, DecShare VerificationG1Point, a1 VerificationG1Point, a2 VerificationG1Point, challenge *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.PVerify(&_Contract.TransactOpts, indexTallier, DecShare, a1, a2, challenge, z)
}

// RScodeVerify is a paid mutator transaction binding the contract method 0xbeaed4a0.
//
// Solidity: function RScodeVerify((uint256,uint256)[] v) returns(bool)
func (_Contract *ContractTransactor) RScodeVerify(opts *bind.TransactOpts, v []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "RScodeVerify", v)
}

// RScodeVerify is a paid mutator transaction binding the contract method 0xbeaed4a0.
//
// Solidity: function RScodeVerify((uint256,uint256)[] v) returns(bool)
func (_Contract *ContractSession) RScodeVerify(v []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.RScodeVerify(&_Contract.TransactOpts, v)
}

// RScodeVerify is a paid mutator transaction binding the contract method 0xbeaed4a0.
//
// Solidity: function RScodeVerify((uint256,uint256)[] v) returns(bool)
func (_Contract *ContractTransactorSession) RScodeVerify(v []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.RScodeVerify(&_Contract.TransactOpts, v)
}

// Tally is a paid mutator transaction binding the contract method 0xe7db3bb2.
//
// Solidity: function Tally(uint256 threshold, uint256 numCandidates, uint256 a, uint256 b) returns()
func (_Contract *ContractTransactor) Tally(opts *bind.TransactOpts, threshold *big.Int, numCandidates *big.Int, a *big.Int, b *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Tally", threshold, numCandidates, a, b)
}

// Tally is a paid mutator transaction binding the contract method 0xe7db3bb2.
//
// Solidity: function Tally(uint256 threshold, uint256 numCandidates, uint256 a, uint256 b) returns()
func (_Contract *ContractSession) Tally(threshold *big.Int, numCandidates *big.Int, a *big.Int, b *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Tally(&_Contract.TransactOpts, threshold, numCandidates, a, b)
}

// Tally is a paid mutator transaction binding the contract method 0xe7db3bb2.
//
// Solidity: function Tally(uint256 threshold, uint256 numCandidates, uint256 a, uint256 b) returns()
func (_Contract *ContractTransactorSession) Tally(threshold *big.Int, numCandidates *big.Int, a *big.Int, b *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Tally(&_Contract.TransactOpts, threshold, numCandidates, a, b)
}

// UploadBallotCipher is a paid mutator transaction binding the contract method 0x65d28554.
//
// Solidity: function UploadBallotCipher((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, (uint256,uint256)[] v, uint256 threshold) returns()
func (_Contract *ContractTransactor) UploadBallotCipher(opts *bind.TransactOpts, Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, v []VerificationG1Point, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadBallotCipher", Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, v, threshold)
}

// UploadBallotCipher is a paid mutator transaction binding the contract method 0x65d28554.
//
// Solidity: function UploadBallotCipher((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, (uint256,uint256)[] v, uint256 threshold) returns()
func (_Contract *ContractSession) UploadBallotCipher(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, v []VerificationG1Point, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadBallotCipher(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, v, threshold)
}

// UploadBallotCipher is a paid mutator transaction binding the contract method 0x65d28554.
//
// Solidity: function UploadBallotCipher((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, (uint256,uint256)[] v, uint256 threshold) returns()
func (_Contract *ContractTransactorSession) UploadBallotCipher(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, v []VerificationG1Point, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadBallotCipher(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, v, threshold)
}

// UploadPVSSShares is a paid mutator transaction binding the contract method 0xe283f130.
//
// Solidity: function UploadPVSSShares((uint256,uint256)[] v, (uint256,uint256)[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] challenge, uint256[] z) returns()
func (_Contract *ContractTransactor) UploadPVSSShares(opts *bind.TransactOpts, v []VerificationG1Point, c []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, challenge []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadPVSSShares", v, c, a1, a2, challenge, z)
}

// UploadPVSSShares is a paid mutator transaction binding the contract method 0xe283f130.
//
// Solidity: function UploadPVSSShares((uint256,uint256)[] v, (uint256,uint256)[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] challenge, uint256[] z) returns()
func (_Contract *ContractSession) UploadPVSSShares(v []VerificationG1Point, c []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, challenge []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadPVSSShares(&_Contract.TransactOpts, v, c, a1, a2, challenge, z)
}

// UploadPVSSShares is a paid mutator transaction binding the contract method 0xe283f130.
//
// Solidity: function UploadPVSSShares((uint256,uint256)[] v, (uint256,uint256)[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] challenge, uint256[] z) returns()
func (_Contract *ContractTransactorSession) UploadPVSSShares(v []VerificationG1Point, c []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, challenge []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadPVSSShares(&_Contract.TransactOpts, v, c, a1, a2, challenge, z)
}

// UploadParameters is a paid mutator transaction binding the contract method 0xb7e5723f.
//
// Solidity: function UploadParameters((uint256,uint256) g0, (uint256,uint256) h0, (uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) pkI, (uint256,uint256)[] sigmak, uint256 a, uint256 b, uint256 numCandidates) returns()
func (_Contract *ContractTransactor) UploadParameters(opts *bind.TransactOpts, g0 VerificationG1Point, h0 VerificationG1Point, g1 VerificationG2Point, pkI VerificationG2Point, sigmak []VerificationG1Point, a *big.Int, b *big.Int, numCandidates *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadParameters", g0, h0, g1, pkI, sigmak, a, b, numCandidates)
}

// UploadParameters is a paid mutator transaction binding the contract method 0xb7e5723f.
//
// Solidity: function UploadParameters((uint256,uint256) g0, (uint256,uint256) h0, (uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) pkI, (uint256,uint256)[] sigmak, uint256 a, uint256 b, uint256 numCandidates) returns()
func (_Contract *ContractSession) UploadParameters(g0 VerificationG1Point, h0 VerificationG1Point, g1 VerificationG2Point, pkI VerificationG2Point, sigmak []VerificationG1Point, a *big.Int, b *big.Int, numCandidates *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadParameters(&_Contract.TransactOpts, g0, h0, g1, pkI, sigmak, a, b, numCandidates)
}

// UploadParameters is a paid mutator transaction binding the contract method 0xb7e5723f.
//
// Solidity: function UploadParameters((uint256,uint256) g0, (uint256,uint256) h0, (uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) pkI, (uint256,uint256)[] sigmak, uint256 a, uint256 b, uint256 numCandidates) returns()
func (_Contract *ContractTransactorSession) UploadParameters(g0 VerificationG1Point, h0 VerificationG1Point, g1 VerificationG2Point, pkI VerificationG2Point, sigmak []VerificationG1Point, a *big.Int, b *big.Int, numCandidates *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadParameters(&_Contract.TransactOpts, g0, h0, g1, pkI, sigmak, a, b, numCandidates)
}

// UploadPublicKey is a paid mutator transaction binding the contract method 0x4ea9637d.
//
// Solidity: function UploadPublicKey((uint256,uint256)[] pks) returns()
func (_Contract *ContractTransactor) UploadPublicKey(opts *bind.TransactOpts, pks []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadPublicKey", pks)
}

// UploadPublicKey is a paid mutator transaction binding the contract method 0x4ea9637d.
//
// Solidity: function UploadPublicKey((uint256,uint256)[] pks) returns()
func (_Contract *ContractSession) UploadPublicKey(pks []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadPublicKey(&_Contract.TransactOpts, pks)
}

// UploadPublicKey is a paid mutator transaction binding the contract method 0x4ea9637d.
//
// Solidity: function UploadPublicKey((uint256,uint256)[] pks) returns()
func (_Contract *ContractTransactorSession) UploadPublicKey(pks []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadPublicKey(&_Contract.TransactOpts, pks)
}

// ZKRPVerify is a paid mutator transaction binding the contract method 0xb562c4ab.
//
// Solidity: function ZKRPVerify((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, uint256[] d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns(bool)
func (_Contract *ContractTransactor) ZKRPVerify(opts *bind.TransactOpts, Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, d []*big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "ZKRPVerify", Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, d, v, indices, threshold)
}

// ZKRPVerify is a paid mutator transaction binding the contract method 0xb562c4ab.
//
// Solidity: function ZKRPVerify((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, uint256[] d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns(bool)
func (_Contract *ContractSession) ZKRPVerify(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, d []*big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ZKRPVerify(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, d, v, indices, threshold)
}

// ZKRPVerify is a paid mutator transaction binding the contract method 0xb562c4ab.
//
// Solidity: function ZKRPVerify((uint256,uint256)[] Ej, (uint256,uint256)[] Fj1, (uint256,uint256)[] Fj2, (uint256,uint256)[] _Uj, (uint256,uint256)[] _Cj, uint256[] c, uint256[] z1, uint256[] z2, uint256[] z3, (uint256,uint256)[] Uj, uint256[] d, (uint256,uint256)[] v, uint256[] indices, uint256 threshold) returns(bool)
func (_Contract *ContractTransactorSession) ZKRPVerify(Ej []VerificationG1Point, Fj1 []VerificationG1Point, Fj2 []VerificationG1Point, _Uj []VerificationG1Point, _Cj []VerificationG1Point, c []*big.Int, z1 []*big.Int, z2 []*big.Int, z3 []*big.Int, Uj []VerificationG1Point, d []*big.Int, v []VerificationG1Point, indices []*big.Int, threshold *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ZKRPVerify(&_Contract.TransactOpts, Ej, Fj1, Fj2, _Uj, _Cj, c, z1, z2, z3, Uj, d, v, indices, threshold)
}

// Coefficient is a paid mutator transaction binding the contract method 0x3ae867e1.
//
// Solidity: function coefficient(uint256 i, uint256 n) returns(uint256)
func (_Contract *ContractTransactor) Coefficient(opts *bind.TransactOpts, i *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "coefficient", i, n)
}

// Coefficient is a paid mutator transaction binding the contract method 0x3ae867e1.
//
// Solidity: function coefficient(uint256 i, uint256 n) returns(uint256)
func (_Contract *ContractSession) Coefficient(i *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Coefficient(&_Contract.TransactOpts, i, n)
}

// Coefficient is a paid mutator transaction binding the contract method 0x3ae867e1.
//
// Solidity: function coefficient(uint256 i, uint256 n) returns(uint256)
func (_Contract *ContractTransactorSession) Coefficient(i *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Coefficient(&_Contract.TransactOpts, i, n)
}

// Inv is a paid mutator transaction binding the contract method 0x338255f3.
//
// Solidity: function inv(uint256 a, uint256 prime) returns(uint256)
func (_Contract *ContractTransactor) Inv(opts *bind.TransactOpts, a *big.Int, prime *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "inv", a, prime)
}

// Inv is a paid mutator transaction binding the contract method 0x338255f3.
//
// Solidity: function inv(uint256 a, uint256 prime) returns(uint256)
func (_Contract *ContractSession) Inv(a *big.Int, prime *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Inv(&_Contract.TransactOpts, a, prime)
}

// Inv is a paid mutator transaction binding the contract method 0x338255f3.
//
// Solidity: function inv(uint256 a, uint256 prime) returns(uint256)
func (_Contract *ContractTransactorSession) Inv(a *big.Int, prime *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Inv(&_Contract.TransactOpts, a, prime)
}
